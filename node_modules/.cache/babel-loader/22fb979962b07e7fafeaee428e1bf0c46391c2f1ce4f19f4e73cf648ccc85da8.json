{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"DatePicker\",\n  props: {\n    'value': {\n      required: true\n    },\n    label: {\n      required: false\n    },\n    disableLabel: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: undefined\n    },\n    description: {\n      required: false\n    },\n    hint: {\n      required: false\n    },\n    rules: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    required: {\n      required: false,\n      default: false,\n      type: Boolean\n    },\n    error: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    errorMessages: {\n      type: Array,\n      default: () => []\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    openOnFocus: {\n      type: Boolean,\n      default: false\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: 'edit'\n    },\n    prependOuterIcon: {\n      type: Boolean,\n      default: false\n    },\n    hideDetails: {\n      type: Boolean,\n      default: false\n    },\n    hideTextField: {\n      type: Boolean,\n      default: false\n    },\n    windowLeft: {\n      type: Boolean,\n      default: false\n    },\n    windowRight: {\n      type: Boolean,\n      default: false\n    },\n    readonlyTextField: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    dateDynamicValueType: [String, Function],\n    dateDynamicUpper: [Number, Function],\n    dateDynamicLower: [Number, Function],\n    dateStaticUpper: [String, Function],\n    dateStaticLower: [String, Function]\n  },\n  data() {\n    return {\n      date_regex: /[0-9][0-9].[0-9][0-9].[0-9]{1,4}/,\n      format: 'DD.MM.YYYY',\n      iso_format: '',\n      open: false,\n      inside_value: this.value,\n      text_value: this.value !== undefined ? this.dateToFormant(this.value) : ''\n    };\n  },\n  watch: {\n    value(nV, oV) {\n      if (nV !== oV) this.inside_value = this.value;\n    },\n    inside_value() {\n      this.text_value = this.inside_value ? this.dateToFormant(this.inside_value) : '';\n      this.$emit('input', this.inside_value);\n      this.$emit('focus', this.inside_value);\n    },\n    text_value() {\n      this.inside_value = this.dateFromFormat(this.text_value);\n      this.$emit('input', this.inside_value);\n      this.$emit('focus', this.inside_value);\n    },\n    open() {\n      let value = this.dateFromFormat(this.text_value);\n      if (this.open && value !== '') {\n        this.inside_value = value;\n      } else if (this.open) {\n        this.text_value = '';\n      }\n    }\n  },\n  computed: {\n    date_dynamic_value_type() {\n      return this.getFormParameter(this.dateDynamicValueType);\n    },\n    date_dynamic_upper() {\n      return this.getFormParameter(this.dateDynamicUpper);\n    },\n    date_dynamic_lower() {\n      return this.getFormParameter(this.dateDynamicLower);\n    },\n    date_static_upper() {\n      return this.getFormParameter(this.dateStaticUpper);\n    },\n    date_static_lower() {\n      return this.getFormParameter(this.dateStaticLower);\n    }\n  },\n  methods: {\n    getFormParameter(parameter) {\n      if (typeof parameter === 'function') return parameter();\n      return parameter;\n    },\n    getUpperBound(shift = 0) {\n      if (this.date_dynamic_value_type) {\n        return moment().add(this.date_dynamic_upper + shift, this.date_dynamic_value_type).toISOString();\n      } else {\n        return this.date_static_upper;\n      }\n    },\n    getLowerBound(shift = 0) {\n      if (this.date_dynamic_value_type) {\n        return moment().subtract(this.date_dynamic_lower + shift, this.date_dynamic_value_type).toISOString();\n      } else {\n        return this.date_static_lower;\n      }\n    },\n    dateToFormant(value) {\n      return moment(value).format('DD.MM.YYYY');\n    },\n    dateFromFormat(value) {\n      if (value === undefined || value === null || value === '') return '';\n      if (this.date_regex.test(value)) {\n        return moment(value, 'DD.MM.YYYY').format('YYYY-MM-DD');\n      }\n      return '';\n    },\n    getFormatRules() {\n      let rules = [...this.rules, v => this.date_regex.test(v) || v === '' || v === null || 'Строка даты не соответсвует формату'];\n      if (this.required) {\n        rules.push(v => !!v || 'Поле обязательно к заполнению');\n      }\n      if (this.getUpperBound()) {\n        rules.push(v => !v || moment(v, 'DD.MM.YYYY').isBefore(this.getUpperBound(0)) || `Дата не может быть позже ${moment(this.getUpperBound(0)).format('DD.MM.YYYY')}`, v => !v || moment(v, 'DD.MM.YYYY').isAfter(this.getLowerBound(0)) || `Дата не может быть раньше ${moment(this.getLowerBound(0)).format('DD.MM.YYYY')}`);\n      }\n      return rules;\n    },\n    validate(show_messages = true) {\n      return this.$refs['text_value'].validate(show_messages);\n    },\n    clear() {\n      this.inside_value = null;\n      this.text_value = null;\n      this.$emit('clear');\n    }\n  },\n  created() {}\n};","map":{"version":3,"mappings":";AA6FA;AAEA;EACAA;EACAC;IACA;MACAC;IACA;IACAC;MACAD;IACA;IACAE;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAN;IACA;IACAO;MACAP;IACA;IACAQ;MACAL;MACAH;MACAI;IACA;IACAJ;MACAA;MACAI;MACAD;IACA;IACAM;MACAN;MACAH;MACAI;IACA;IACAM;MACAP;MACAC;IACA;IACAO;MACAR;MACAC;IACA;IACAQ;MACAT;MACAC;IACA;IACAS;MACAV;MACAC;IACA;IACAU;MACAX;MACAC;IACA;IACAW;MACAZ;MACAC;IACA;IACAY;MACAb;MACAC;IACA;IACAa;MACAd;MACAC;IACA;IACAc;MACAf;MACAC;IACA;IACAe;MACAhB;MACAC;IACA;IACAgB;MACAjB;MACAC;IACA;IACAiB;MACAlB;MACAC;IACA;IACAkB;MACAnB;MACAC;IACA;IACAmB;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA,eACA;IACA;IACAH;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAF;MACA;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EACAK;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA,qCACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA,2DACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA,aACA,eACAC,gGACA;MACA;QACA1C;MACA;MACA;QACAA,WACA0C,wJACAA,uJACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;EACAC;AACA","names":["name","props","required","label","disableLabel","type","default","placeholder","description","hint","rules","error","errorMessages","loading","readonly","openOnFocus","closeOnContentClick","icon","prependOuterIcon","hideDetails","hideTextField","windowLeft","windowRight","readonlyTextField","clearable","dateDynamicValueType","dateDynamicUpper","dateDynamicLower","dateStaticUpper","dateStaticLower","data","date_regex","format","iso_format","open","inside_value","text_value","watch","value","computed","date_dynamic_value_type","date_dynamic_upper","date_dynamic_lower","date_static_upper","date_static_lower","methods","getFormParameter","getUpperBound","getLowerBound","dateToFormant","dateFromFormat","getFormatRules","v","validate","clear","created"],"sourceRoot":"src/modules/core/components","sources":["DatePicker.vue"],"sourcesContent":["<template>\n  <div>\n    <v-menu\n        ref=\"menu_flag\"\n        v-model=\"open\"\n        :close-on-content-click=\"false\"\n        transition=\"scale-transition\"\n        offset-y\n        min-width=\"auto\"\n        :left=\"windowLeft\"\n        :right=\"windowRight\"\n    >\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-text-field\n            v-if=\"!hideTextField\"\n            ref=\"text_value\"\n            v-model=\"text_value\"\n            :rules=\"getFormatRules()\"\n            :hint=\"description || hint\"\n            :persistent-hint=\"!!description || !!hint\"\n            :error=\"error\"\n            :error-messages=\"errorMessages\"\n            :loading=\"loading\"\n            :readonly=\"readonly || readonlyTextField\"\n            v-bind=\"openOnFocus ? attrs: {}\"\n            v-on=\"openOnFocus ? on: {}\"\n            @focus=\"$emit('focus', $event)\"\n            :hide-details=\"hideDetails\"\n            :placeholder=\"placeholder\"\n            :clearable=\"clearable\"\n            @click:clear=\"clear\"\n        >\n          <template v-slot:prepend-inner v-if=\"!prependOuterIcon\">\n            <v-icon v-bind=\"attrs\" v-on=\"on\">{{icon}}</v-icon>\n          </template>\n          <template v-slot:prepend v-else>\n            <v-icon v-bind=\"attrs\" v-on=\"on\" >{{icon}}</v-icon>\n          </template>\n          <template v-slot:label v-if=\"!disableLabel\">\n            <slot name=\"label\">\n              {{label}} <span v-if=\"required\" class=\"red--text\">*</span>:\n            </slot>\n          </template>\n          <!--          <template v-slot:append v-if=\"clearable\">-->\n          <!--            <v-btn icon x-small class=\"mt-1\" @click=\"clear()\">-->\n          <!--              <v-icon>close</v-icon>-->\n          <!--            </v-btn>-->\n          <!--          </template>-->\n        </v-text-field>\n        <v-btn v-else v-bind=\"attrs\" v-on=\"on\" icon><v-icon>{{icon}}</v-icon></v-btn>\n      </template>\n      <v-card>\n        <v-toolbar height=\"50\" class=\"h6\" color=\"subprimary\">{{label}}</v-toolbar>\n        <v-divider></v-divider>\n        <v-date-picker\n            v-model=\"inside_value\"\n            no-title\n            scrollable\n            :first-day-of-week=\"1\"\n            locale=\"ru-ru\"\n            @change=\"open = false\"\n            :max=\"getUpperBound()\"\n            :min=\"getLowerBound()\"\n            :readonly=\"readonly\"\n        >\n          <template v-if='!closeOnContentClick'>\n            <v-btn\n                :icon=\"$vuetify.breakpoint.smAndDown\"\n                :text=\"$vuetify.breakpoint.mdAndUp\"\n                color=\"primary\"\n                @click=\"open = false\"\n            >\n              <v-icon>highlight_off</v-icon>\n              <span v-if=\"$vuetify.breakpoint.mdAndUp\">Отмена</span>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <v-btn\n                :icon=\"$vuetify.breakpoint.smAndDown\"\n                :text=\"$vuetify.breakpoint.mdAndUp\"\n                color=\"primary\"\n                @click=\"$refs.menu_flag.save(inside_value)\"\n            >\n              <span v-if=\"$vuetify.breakpoint.mdAndUp\">Ок</span>\n              <v-icon>check_circle</v-icon>\n            </v-btn>\n          </template>\n        </v-date-picker>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\nexport default {\n  name: \"DatePicker\",\n  props: {\n    'value': {\n      required: true\n    },\n    label: {\n      required: false\n    },\n    disableLabel: {\n      type: Boolean,\n      default: false,\n    },\n    placeholder: {\n      type: String,\n      default: undefined,\n    },\n    description: {\n      required: false\n    },\n    hint: {\n      required: false\n    },\n    rules: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    required: {\n      required: false,\n      default: false,\n      type: Boolean\n    },\n    error: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    errorMessages: {\n      type: Array,\n      default: () => [],\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    openOnFocus: {\n      type: Boolean,\n      default: false,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: false,\n    },\n    icon: {\n      type: String,\n      default: 'edit',\n    },\n    prependOuterIcon:{\n      type: Boolean,\n      default: false,\n    },\n    hideDetails: {\n      type: Boolean,\n      default: false,\n    },\n    hideTextField: {\n      type: Boolean,\n      default: false,\n    },\n    windowLeft: {\n      type: Boolean,\n      default: false,\n    },\n    windowRight: {\n      type: Boolean,\n      default: false,\n    },\n    readonlyTextField: {\n      type: Boolean,\n      default: false,\n    },\n    clearable: {\n      type: Boolean,\n      default: false,\n    },\n    dateDynamicValueType: [String, Function],\n    dateDynamicUpper: [Number, Function],\n    dateDynamicLower: [Number, Function],\n    dateStaticUpper: [String, Function],\n    dateStaticLower: [String, Function],\n  },\n  data(){\n    return {\n      date_regex: /[0-9][0-9].[0-9][0-9].[0-9]{1,4}/,\n      format: 'DD.MM.YYYY',\n      iso_format: '',\n      open: false,\n      inside_value: this.value,\n      text_value: this.value !== undefined ? this.dateToFormant(this.value) : '',\n    }\n  },\n  watch: {\n    value(nV, oV){\n      if(nV !== oV)\n        this.inside_value = this.value\n    },\n    inside_value(){\n      this.text_value = this.inside_value ? this.dateToFormant(this.inside_value): ''\n      this.$emit('input', this.inside_value)\n      this.$emit('focus', this.inside_value)\n    },\n    text_value(){\n      this.inside_value = this.dateFromFormat(this.text_value)\n      this.$emit('input', this.inside_value)\n      this.$emit('focus', this.inside_value)\n    },\n    open(){\n      let value = this.dateFromFormat(this.text_value);\n      if (this.open && value !== '') {\n        this.inside_value = value;\n      } else if (this.open) {\n        this.text_value = '';\n      }\n    }\n  },\n  computed: {\n    date_dynamic_value_type(){\n      return this.getFormParameter(this.dateDynamicValueType)\n    },\n    date_dynamic_upper(){\n      return this.getFormParameter(this.dateDynamicUpper)\n    },\n    date_dynamic_lower(){\n      return this.getFormParameter(this.dateDynamicLower)\n    },\n    date_static_upper(){\n      return this.getFormParameter(this.dateStaticUpper)\n    },\n    date_static_lower(){\n      return this.getFormParameter(this.dateStaticLower)\n    },\n  },\n  methods: {\n    getFormParameter(parameter){\n      if (typeof parameter === 'function')\n        return parameter()\n      return parameter\n    },\n    getUpperBound(shift=0) {\n      if (this.date_dynamic_value_type) {\n        return moment().add(this.date_dynamic_upper + shift, this.date_dynamic_value_type).toISOString();\n      } else {\n        return this.date_static_upper\n      }\n    },\n    getLowerBound(shift=0) {\n      if (this.date_dynamic_value_type) {\n        return moment().subtract(this.date_dynamic_lower + shift, this.date_dynamic_value_type).toISOString();\n      } else {\n        return this.date_static_lower\n      }\n    },\n    dateToFormant(value){\n      return moment(value).format('DD.MM.YYYY')\n    },\n    dateFromFormat(value){\n      if (value === undefined || value === null || value === '')\n        return ''\n      if (this.date_regex.test(value)){\n        return moment(value, 'DD.MM.YYYY').format('YYYY-MM-DD')\n      }\n      return ''\n    },\n    getFormatRules(){\n      let rules = [\n        ...this.rules,\n        v => (this.date_regex.test(v) || v === '' || v === null) || 'Строка даты не соответсвует формату',\n      ]\n      if (this.required) {\n        rules.push(v => (!!v) || 'Поле обязательно к заполнению')\n      }\n      if (this.getUpperBound()) {\n        rules.push(\n            v => (!v || moment(v, 'DD.MM.YYYY').isBefore(this.getUpperBound(0))) || `Дата не может быть позже ${moment(this.getUpperBound(0)).format('DD.MM.YYYY')}`,\n            v => (!v || moment(v, 'DD.MM.YYYY').isAfter(this.getLowerBound(0))) || `Дата не может быть раньше ${moment(this.getLowerBound(0)).format('DD.MM.YYYY')}`\n        )\n      }\n      return rules\n    },\n    validate(show_messages=true) {\n      return this.$refs['text_value'].validate(show_messages)\n    },\n    clear() {\n      this.inside_value = null;\n      this.text_value = null;\n      this.$emit('clear');\n    },\n  },\n  created() {}\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}