{"ast":null,"code":"import FormErrorsMixin from \"@/mixins/FormErrorsMixin\";\nimport { makeGetRequest, makePostRequest, makeUpdateRequest } from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nexport default {\n  name: \"PosEditForm\",\n  components: {\n    ScrollCenterDialog\n  },\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    posData: Object\n  },\n  data() {\n    return {\n      default_data: {\n        position: undefined,\n        dep_field: undefined,\n        is_head: false\n      },\n      URL_DEP: selectors.API + selectors.TEMPS.DEPARTMENTS,\n      URL_POS: models.API + roles.SUPER_ADMIN + models.TEMPS.NAME + models.TEMPS.PATH.POSITIONS,\n      loading: false,\n      is_head: false,\n      position: undefined,\n      departments: undefined,\n      dep_field: undefined,\n      save_loading: false\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close', false);\n    },\n    save() {\n      let data = {\n        name: this.position,\n        department: this.dep_field,\n        is_head: this.is_head\n      };\n      if (this.edit) {\n        let id = this.posData.id;\n        data.department = data.department.value;\n        this.changePos(data, id);\n      } else {\n        this.createPos(data);\n      }\n    },\n    getDepartments() {\n      makeGetRequest(this.URL_DEP).then(resp => resp.json()).then(data => {\n        this.departments = data;\n      });\n    },\n    createPos(data) {\n      makePostRequest(this.URL_POS, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.position);\n      }, 300);\n    },\n    changePos(data, id) {\n      let url_id = id + '/';\n      makeUpdateRequest(this.URL_POS + url_id, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.position);\n      }, 300);\n    },\n    load_edit_item() {\n      if (this.posData) {\n        this.position = this.posData.name;\n        this.dep_field = this.posData.department;\n        // this.dep_field = {value: this.posData.department.value, text: this.posData.department.text}\n        this.is_head = this.posData.is_head;\n      }\n    }\n  },\n  created() {\n    this.getDepartments();\n    this.load_edit_item();\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить должность' : 'Редактировать должность';\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAH;MACAF;MACAM;MACAL;MACAM;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACApB;QACAqB;QACAT;MACA;MAEA;QACA;QACAJ;QACA;MACA;QACA;MACA;IACA;IACAc;MACAC,6BACAC,0BACAA;QACA;MACA;IACA;IACAC;MACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAF;QACA;QACA;MACA;IACA;IACAG;MACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EAEAC;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EAEA;AACA","names":["name","components","ScrollCenterDialog","mixins","props","opened","edit","posData","data","default_data","position","dep_field","is_head","URL_DEP","URL_POS","loading","departments","save_loading","methods","close","save","department","getDepartments","makeGetRequest","then","createPos","makePostRequest","setTimeout","changePos","makeUpdateRequest","load_edit_item","created","computed","form_title"],"sourceRoot":"src/modules/admin/positions","sources":["PosEditForm.vue"],"sourcesContent":["<template>\n  <scroll-center-dialog\n      v-model=\"\n      /* eslint-disable-next-line vue/no-mutating-props */\n      opened\"\n      :loading=\"save_loading\"\n      width=\"500\"\n      @close=\"close\"\n      @apply=\"save\"\n      :title=\"form_title\"\n      :scrolled=\"false\"\n  >\n    <v-text-field\n        v-model=\"position\"\n        label=\"Должность\"\n        :error=\"hasError('position')\"\n        :errorMessages=\"getError('position')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-autocomplete\n        v-model=\"dep_field\"\n        :items=\"departments\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Департамент\"\n        :error=\"hasError('order_type')\"\n        :errorMessages=\"getError('order_type')\"\n    ></v-autocomplete>\n    <v-checkbox\n        v-model=\"is_head\"\n        :label=\"`Начальник: ${is_head.toString()}`\"\n    ></v-checkbox>\n  </scroll-center-dialog>\n</template>\n\n<script>\nimport FormErrorsMixin from \"@/mixins/FormErrorsMixin\"\nimport {makeGetRequest, makePostRequest, makeUpdateRequest} from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\n\nexport default {\n  name: \"PosEditForm\",\n  components: {ScrollCenterDialog},\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    posData: Object,\n  },\n  data() {\n    return {\n      default_data: {\n        position: undefined,\n        dep_field: undefined,\n        is_head: false\n      },\n      URL_DEP: selectors.API + selectors.TEMPS.DEPARTMENTS,\n      URL_POS: models.API + roles.SUPER_ADMIN + models.TEMPS.NAME + models.TEMPS.PATH.POSITIONS,\n      loading: false,\n      is_head: false,\n      position: undefined,\n      departments: undefined,\n      dep_field: undefined,\n      save_loading: false,\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close', false)\n    },\n    save() {\n      let data = {\n        name: this.position,\n        department: this.dep_field,\n        is_head: this.is_head\n      }\n\n      if (this.edit) {\n        let id = this.posData.id\n        data.department = data.department.value\n        this.changePos(data, id)\n      } else {\n        this.createPos(data)\n      }\n    },\n    getDepartments() {\n      makeGetRequest(this.URL_DEP)\n          .then(resp => resp.json())\n          .then(data => {\n            this.departments = data\n          })\n    },\n    createPos(data) {\n      makePostRequest(this.URL_POS, data)\n      setTimeout(()=>{\n        this.save_loading = false\n        this.$emit('close', this.position)\n      }, 300)\n    },\n    changePos(data, id) {\n      let url_id = id + '/'\n      makeUpdateRequest(this.URL_POS + url_id, data)\n      setTimeout(()=>{\n        this.save_loading = false\n        this.$emit('close', this.position)\n      }, 300)\n    },\n    load_edit_item() {\n      if (this.posData) {\n        this.position = this.posData.name\n        this.dep_field = this.posData.department\n        // this.dep_field = {value: this.posData.department.value, text: this.posData.department.text}\n        this.is_head = this.posData.is_head\n      }\n    },\n  },\n\n  created() {\n    this.getDepartments()\n    this.load_edit_item()\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить должность' : 'Редактировать должность'\n    }\n    ,\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}