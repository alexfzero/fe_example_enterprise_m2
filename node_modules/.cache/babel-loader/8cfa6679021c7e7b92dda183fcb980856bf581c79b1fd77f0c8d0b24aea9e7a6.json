{"ast":null,"code":"import PageHeader from \"@/modules/core/components/PageHeader.vue\";\nimport ContractEditForm from \"@/modules/admin/contract/ContractEditForm.vue\";\nimport ApplyDialog from \"@/modules/admin/contract/ApplyDialog.vue\";\nimport urls from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport { makeGetRequest, makeDeleteRequest } from \"@/helper\";\nexport default {\n  name: \"ContractList\",\n  components: {\n    PageHeader,\n    ApplyDialog,\n    ContractEditForm\n  },\n  data() {\n    return {\n      title: 'Контракты',\n      count: 0,\n      width: '800px',\n      options: {},\n      URL: urls.API + roles.SUPER_ADMIN + urls.REFERENCES.NAME + urls.REFERENCES.PATH.CONTRACTS,\n      loadingPage: false,\n      attrs: undefined,\n      dialog_add_edit: false,\n      dialog_delete: false,\n      ctr_data: undefined,\n      edit_status: undefined,\n      items: undefined,\n      headers: [{\n        text: 'ID',\n        value: 'id',\n        align: 'start',\n        sortable: false,\n        width: '25px'\n      }, {\n        text: 'Номер',\n        value: 'number',\n        align: 'start',\n        sortable: false\n      }, {\n        text: 'Клиент',\n        value: 'client.text',\n        align: 'start',\n        sortable: true\n      }, {\n        text: 'Документ',\n        value: 'Document',\n        align: 'start',\n        sortable: false\n      }, {\n        text: 'Статус',\n        value: 'status.text',\n        align: 'start',\n        sortable: true\n      }, {\n        text: 'Сформирован',\n        value: 'formalized',\n        align: 'start',\n        sortable: true\n      }, {\n        text: 'Действия',\n        value: 'actions',\n        align: 'center',\n        sortable: false,\n        width: '100px'\n      }]\n    };\n  },\n  watch: {\n    options: {\n      handler() {\n        this.loadData();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    checkFlag(flag) {\n      if (flag) return {\n        icon: \"check_circle\",\n        color: \"green\"\n      };else return {\n        icon: \"not_interested\",\n        color: \"grey\"\n      };\n    },\n    newContr() {\n      this.dialog_add_edit = true;\n      this.edit_status = false;\n      this.ctr_data = undefined;\n    },\n    editContr(item) {\n      this.dialog_add_edit = true;\n      this.edit_status = true;\n      this.ctr_data = item;\n    },\n    deleteContr(item) {\n      this.dialog_delete = true;\n      this.ctr_data = item;\n    },\n    // eslint-disable-next-line no-unused-vars\n    closeEditDialog(event) {\n      this.loadData();\n      this.dialog_add_edit = false;\n      this.ctr_data = undefined;\n    },\n    closeDeleteDialog(event) {\n      console.log('event', event);\n      if (event) {\n        let id_url = this.ctr_data.id + '/';\n        makeDeleteRequest(this.URL + id_url);\n      }\n      setTimeout(() => {\n        this.loadData();\n        this.dialog_delete = false;\n        this.ctr_data = undefined;\n      }, 700);\n    },\n    updateData() {\n      this.loadData();\n    },\n    loadData(url = undefined) {\n      this.items = [];\n      if (!url) {\n        url = new URL(this.URL);\n      }\n      let params = {};\n      if (this.options.page && this.options.itemsPerPage) {\n        params.page = this.options.page;\n        params.size = this.options.itemsPerPage;\n      } else {\n        params.page = \"1\";\n        params.size = \"10\";\n      }\n      url.search = new URLSearchParams(params).toString();\n      this.loadingPage = true;\n      makeGetRequest(url).then(resp => resp.json()).then(data => {\n        this.items = data.results;\n        this.count = data.count;\n        this.loadingPage = false;\n      });\n\n      // if (reload) {\n      //   this.updateData()\n      // }\n    }\n  },\n\n  created() {\n    // this.loadData()\n  }\n};","map":{"version":3,"mappings":"AAsFA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,UACA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAd;MAAA,GACA;QAAAW;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;QAAAd;MAAA;IAEA;EACA;EACAe;IACAd;MACAe;QACA;MACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;QAAAC;QAAAC;MAAA,OACA;QAAAD;QAAAC;MAAA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACAC;MAEA;QACA;QACAC;MACA;MACAC;QACA;QACA;QACA;MACA;IAEA;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAC;MACA;MACA;MACA;QACAC;QACAA;MACA;QACAA;QACAA;MACA;MACAD;MACA;MACAE,oBACAC,0BACAA;QACA;QACA;QACA;MACA;;MAEA;MACA;MACA;IACA;EACA;;EACAC;IACA;EAAA;AAEA","names":["name","components","PageHeader","ApplyDialog","ContractEditForm","data","title","count","width","options","URL","loadingPage","attrs","dialog_add_edit","dialog_delete","ctr_data","edit_status","items","headers","text","value","align","sortable","watch","handler","deep","methods","checkFlag","icon","color","newContr","editContr","deleteContr","closeEditDialog","closeDeleteDialog","console","makeDeleteRequest","setTimeout","updateData","loadData","url","params","makeGetRequest","then","created"],"sourceRoot":"src/modules/admin/contract","sources":["ContractList.vue"],"sourcesContent":["<template>\n  <div>\n    <PageHeader :title=\"title\"></PageHeader>\n    <v-container class=\"d-flex flex-column justify-center align-center\">\n      <v-toolbar\n          class=\"removeBtnPaddingRight\"\n          color=\"#DADADA\"\n          dense\n          flat\n          :width=\"width\"\n      >\n        <v-toolbar-items v-if=\"$vuetify.breakpoint.mdAndUp\" class=\"pa-2\">\n          <v-btn\n              color=\"primary\"\n\n              @click=\"newContr\"\n          >\n            Добавить\n          </v-btn>\n        </v-toolbar-items>\n        <v-spacer></v-spacer>\n        <v-toolbar-items v-if=\"$vuetify.breakpoint.mdAndUp\" class=\"pa-2\">\n          <v-btn\n              @click=\"updateData\"\n          >\n            Обновить\n          </v-btn>\n        </v-toolbar-items>\n      </v-toolbar>\n      <v-data-table\n          :headers=\"headers\"\n          :items=\"items\"\n          :loading=\"loadingPage\"\n          no-data-text=\"Нет данных\"\n          class=\"elevation-1\"\n          :style=\"`width:` + width\"\n          :options.sync=\"options\"\n          :server-items-length=\"count\"\n      >\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-tooltip bottom>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-icon\n                  class=\"mr-2\"\n                  @click=\"editContr(item)\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n              >\n                edit\n              </v-icon>\n            </template>\n            <span>Редактировать контракт</span>\n          </v-tooltip>\n          <v-tooltip bottom>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-icon\n                  @click=\"deleteContr(item)\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                  class=\"mr-2\"\n              >\n                delete\n              </v-icon>\n            </template>\n            <span>Удалить контракт</span>\n          </v-tooltip>\n        </template>\n      </v-data-table>\n      <ContractEditForm\n          v-if=\"dialog_add_edit\"\n          :opened=\"dialog_add_edit\"\n          :edit=\"edit_status\"\n          :ctr-data=\"ctr_data\"\n          @close=\"closeEditDialog\"\n      ></ContractEditForm>\n      <ApplyDialog\n          v-if=\"dialog_delete\"\n          :opened=\"dialog_delete\"\n          :get-text=\"() => `Вы уверены, что хотите удалить данный контракт ?`\"\n          @close=\"closeDeleteDialog\"\n      ></ApplyDialog>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport PageHeader from \"@/modules/core/components/PageHeader.vue\";\nimport ContractEditForm from \"@/modules/admin/contract/ContractEditForm.vue\";\nimport ApplyDialog from \"@/modules/admin/contract/ApplyDialog.vue\";\nimport urls from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport {makeGetRequest, makeDeleteRequest} from \"@/helper\";\n\nexport default {\n  name: \"ContractList\",\n  components: {\n    PageHeader,\n    ApplyDialog,\n    ContractEditForm\n  },\n  data() {\n    return {\n      title: 'Контракты',\n      count: 0,\n      width: '800px',\n      options: {},\n      URL: urls.API + roles.SUPER_ADMIN + urls.REFERENCES.NAME + urls.REFERENCES.PATH.CONTRACTS,\n      loadingPage: false,\n      attrs: undefined,\n      dialog_add_edit: false,\n      dialog_delete: false,\n      ctr_data: undefined,\n      edit_status: undefined,\n      items: undefined,\n      headers: [\n        {text: 'ID', value: 'id', align: 'start', sortable: false, width: '25px'},\n        {text: 'Номер', value: 'number', align: 'start', sortable: false},\n        {text: 'Клиент', value: 'client.text', align: 'start', sortable: true},\n        {text: 'Документ', value: 'Document', align: 'start', sortable: false},\n        {text: 'Статус', value: 'status.text', align: 'start', sortable: true},\n        {text: 'Сформирован', value: 'formalized', align: 'start', sortable: true},\n        {text: 'Действия', value: 'actions', align: 'center', sortable: false, width: '100px'},\n      ],\n    }\n  },\n  watch: {\n    options: {\n      handler() {\n        this.loadData()\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    checkFlag(flag) {\n      if (flag) return {icon: \"check_circle\", color: \"green\"}\n      else return {icon: \"not_interested\", color: \"grey\"}\n    },\n    newContr() {\n      this.dialog_add_edit = true\n      this.edit_status = false\n      this.ctr_data = undefined\n    },\n    editContr(item) {\n      this.dialog_add_edit = true\n      this.edit_status = true\n      this.ctr_data = item\n    },\n    deleteContr(item) {\n      this.dialog_delete = true\n      this.ctr_data = item\n    },\n    // eslint-disable-next-line no-unused-vars\n    closeEditDialog(event) {\n      this.loadData()\n      this.dialog_add_edit = false\n      this.ctr_data = undefined\n    },\n    closeDeleteDialog(event) {\n      console.log('event', event)\n\n      if (event) {\n        let id_url = this.ctr_data.id + '/'\n        makeDeleteRequest(this.URL + id_url)\n      }\n      setTimeout(()=>{\n        this.loadData()\n        this.dialog_delete = false\n        this.ctr_data = undefined\n      }, 700)\n\n    },\n    updateData() {\n      this.loadData()\n    },\n    loadData(url = undefined) {\n      this.items = []\n      if (!url) {\n        url = new URL(this.URL)\n      }\n      let params = {}\n      if (this.options.page && this.options.itemsPerPage) {\n        params.page = this.options.page\n        params.size = this.options.itemsPerPage\n      } else {\n        params.page = \"1\"\n        params.size = \"10\"\n      }\n      url.search = new URLSearchParams(params).toString()\n      this.loadingPage = true\n      makeGetRequest(url)\n          .then(resp => resp.json())\n          .then(data => {\n            this.items = data.results\n            this.count = data.count\n            this.loadingPage = false\n          })\n\n      // if (reload) {\n      //   this.updateData()\n      // }\n    }\n  },\n  created() {\n    // this.loadData()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}