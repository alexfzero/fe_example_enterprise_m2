{"ast":null,"code":"import FormErrorsMixin from \"@/mixins/FormErrorsMixin\";\nimport { makeGetRequest, makePostRequest, makeUpdateRequest } from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nexport default {\n  name: \"OperationEditForm\",\n  components: {\n    ScrollCenterDialog\n  },\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    operData: Object\n  },\n  data() {\n    return {\n      URL_ORD: selectors.API + selectors.ORDERS.ORDERS,\n      URL_STR: selectors.API + selectors.REFERENCES.STORAGES,\n      URL_TYPE: selectors.API + selectors.TEMPS.OPERATIONS,\n      URL_OPER: models.API + roles.SUPER_ADMIN + models.REFERENCES.NAME + models.REFERENCES.PATH.OPERATIONS,\n      loading: false,\n      str_oper: {\n        number_operation: undefined,\n        order: undefined,\n        product: undefined,\n        operation_type: undefined\n      },\n      orders: undefined,\n      products: undefined,\n      types: undefined,\n      save_loading: false\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close', false);\n    },\n    save() {\n      let data = {};\n      for (let key in this.str_oper) {\n        data[key] = this.str_oper[key];\n      }\n      if (this.edit) {\n        let id = this.operData.id;\n        this.changeStrOper(data, id);\n      } else {\n        this.createStrOper(data);\n      }\n    },\n    getOrders() {\n      makeGetRequest(this.URL_ORD).then(resp => resp.json()).then(data => {\n        this.orders = data;\n      });\n    },\n    getProducts() {\n      makeGetRequest(this.URL_STR).then(resp => resp.json()).then(data => {\n        this.products = data;\n      });\n    },\n    getTypes() {\n      makeGetRequest(this.URL_TYPE).then(resp => resp.json()).then(data => {\n        this.types = data;\n      });\n    },\n    createStrOper(data) {\n      makePostRequest(this.URL_OPER, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.str_oper);\n      }, 800);\n    },\n    changeStrOper(data, id) {\n      let url_id = id + '/';\n      makeUpdateRequest(this.URL_OPER + url_id, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.str_oper);\n      }, 800);\n    },\n    load_edit_item() {\n      if (this.operData) {\n        for (let key in this.operData) {\n          if (key in this.str_oper) {\n            if (typeof this.operData[key] === \"object\") {\n              this.str_oper[key] = this.operData[key].value;\n              continue;\n            }\n            this.str_oper[key] = this.operData[key];\n          }\n        }\n      }\n    }\n  },\n  created() {\n    this.getOrders();\n    this.getProducts();\n    this.getTypes();\n    this.load_edit_item();\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить операцию' : 'Редактировать операцию';\n    }\n  }\n};","map":{"version":3,"mappings":"AAqDA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAjB;MACA;MAEA;QACA;QACA;MACA;QACA;MACA;IACA;IACAkB;MACAC,6BACAC,0BACAA;QACA;MACA;IACA;IACAC;MACAF,6BACAC,0BACAA;QACA;MACA;IACA;IACAE;MACAH,8BACAC,0BACAA;QACA;MACA;IACA;IACAG;MACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAF;QACA;QACA;MACA;IACA;IACAG;MACA;QACA;UACA;YACA;cACA;cACA;YACA;YACA;UACA;QACA;MACA;IACA;EACA;EAEAC;IACA;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["name","components","ScrollCenterDialog","mixins","props","opened","edit","operData","data","URL_ORD","URL_STR","URL_TYPE","URL_OPER","loading","str_oper","number_operation","order","product","operation_type","orders","products","types","save_loading","methods","close","save","getOrders","makeGetRequest","then","getProducts","getTypes","createStrOper","makePostRequest","setTimeout","changeStrOper","makeUpdateRequest","load_edit_item","created","computed","form_title"],"sourceRoot":"src/modules/admin/storage","sources":["OperationEditForm.vue"],"sourcesContent":["<template>\n  <scroll-center-dialog\n      v-model=\"\n      /* eslint-disable-next-line vue/no-mutating-props */\n      opened\"\n      :loading=\"save_loading\"\n      width=\"600\"\n      @close=\"close\"\n      @apply=\"save\"\n      :title=\"form_title\"\n      :scrolled=\"false\"\n  >\n    <v-text-field\n        v-model=\"str_oper.number_operation\"\n        label=\"Номер\"\n        :error=\"hasError('number_operation')\"\n        :errorMessages=\"getError('number_operation')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"str_oper.order\"\n        :items=\"orders\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Заказ\"\n        :error=\"hasError('order')\"\n        :errorMessages=\"getError('order')\"\n    ></v-autocomplete>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"str_oper.product\"\n        :items=\"products\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Товар\"\n        :error=\"hasError('product')\"\n        :errorMessages=\"getError('product')\"\n    ></v-autocomplete>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"str_oper.operation_type\"\n        :items=\"types\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Тип операции\"\n        :error=\"hasError('operation_type')\"\n        :errorMessages=\"getError('operation_type')\"\n    ></v-autocomplete>\n  </scroll-center-dialog>\n</template>\n\n<script>\nimport FormErrorsMixin from \"@/mixins/FormErrorsMixin\"\nimport {makeGetRequest, makePostRequest, makeUpdateRequest} from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\n\nexport default {\n  name: \"OperationEditForm\",\n  components: {ScrollCenterDialog},\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    operData: Object,\n  },\n  data() {\n    return {\n      URL_ORD: selectors.API + selectors.ORDERS.ORDERS,\n      URL_STR: selectors.API + selectors.REFERENCES.STORAGES,\n      URL_TYPE: selectors.API + selectors.TEMPS.OPERATIONS,\n      URL_OPER: models.API + roles.SUPER_ADMIN + models.REFERENCES.NAME + models.REFERENCES.PATH.OPERATIONS,\n      loading: false,\n      str_oper: {\n        number_operation: undefined,\n        order: undefined,\n        product: undefined,\n        operation_type: undefined,\n      },\n      orders: undefined,\n      products: undefined,\n      types: undefined,\n      save_loading:false,\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close', false)\n    },\n    save() {\n      let data = {}\n      for (let key in this.str_oper) {\n        data[key] = this.str_oper[key]\n      }\n\n      if (this.edit) {\n        let id = this.operData.id\n        this.changeStrOper(data, id)\n      } else {\n        this.createStrOper(data)\n      }\n    },\n    getOrders() {\n      makeGetRequest(this.URL_ORD)\n          .then(resp => resp.json())\n          .then(data => {\n            this.orders = data\n          })\n    },\n    getProducts() {\n      makeGetRequest(this.URL_STR)\n          .then(resp => resp.json())\n          .then(data => {\n            this.products = data\n          })\n    },\n    getTypes() {\n      makeGetRequest(this.URL_TYPE)\n          .then(resp => resp.json())\n          .then(data => {\n            this.types = data\n          })\n    },\n    createStrOper(data) {\n      makePostRequest(this.URL_OPER, data)\n      setTimeout(() => {\n        this.save_loading = false\n        this.$emit('close', this.str_oper)\n      }, 800)\n    },\n    changeStrOper(data, id) {\n      let url_id = id + '/'\n      makeUpdateRequest(this.URL_OPER + url_id, data)\n      setTimeout(() => {\n        this.save_loading = false\n        this.$emit('close', this.str_oper)\n      }, 800)\n    },\n    load_edit_item() {\n      if (this.operData) {\n        for (let key in this.operData) {\n          if (key in this.str_oper) {\n            if (typeof this.operData[key] === \"object\") {\n              this.str_oper[key] = this.operData[key].value\n              continue\n            }\n            this.str_oper[key] = this.operData[key]\n          }\n        }\n      }\n    },\n  },\n\n  created() {\n    this.getOrders()\n    this.getProducts()\n    this.getTypes()\n    this.load_edit_item()\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить операцию' : 'Редактировать операцию'\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}