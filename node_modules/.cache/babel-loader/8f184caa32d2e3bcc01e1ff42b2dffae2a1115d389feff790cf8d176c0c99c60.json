{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport DashBoardCard from './cards.vue';\nfunction groupBy(array, key) {\n  const result = {};\n  array.forEach(item => {\n    if (!result[item[key]]) {\n      result[item[key]] = [];\n    }\n    result[item[key]].push(item);\n  });\n  return result;\n}\nexport default {\n  name: \"dashBoard\",\n  data() {\n    return {};\n  },\n  components: {\n    DashBoardCard\n  },\n  created() {\n    this.loadCategories;\n    this.sounds;\n  },\n  methods: {\n    getCategoryById: function (id) {\n      let category = this.categories.filter(c => c.id == id)[0];\n      if (category === undefined) {\n        console.log('undefined qarşim');\n        return {\n          title: 'Unknown'\n        };\n      }\n      return category;\n    }\n  },\n  computed: {\n    ...mapActions({\n      loadCategories: 'categories/loadCategories',\n      loadSounds: 'sounds/loadSounds'\n    }),\n    ...mapGetters({\n      categories: 'categories/getCategories',\n      sounds: 'sounds/getSounds'\n    }),\n    groups() {\n      return groupBy(this.sounds, 'category_id');\n    }\n  }\n};","map":{"version":3,"mappings":";AAkDA;AACA;AAEA;EACA;EACAA;IACA;MACAC;IACA;IACAA;EACA;EACA;AACA;AAEA;EACAC;EACAC;IACA;EACA;EACAC;IACAC;EACA;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACA;MACA;QACAC;QACA;UAAAC;QAAA;MACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;IACA;MACAC;MACAC;IACA;IACAC;MACA;IACA;EACA;AACA","names":["array","result","name","data","components","DashBoardCard","created","methods","getCategoryById","console","title","computed","loadCategories","loadSounds","categories","sounds","groups"],"sourceRoot":"src/modules/admin/components","sources":["dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row>\n      <v-col cols=\"6\">\n        <DashBoardCard :title=\"'Number of Sounds'\" color=\"primary\" :data=\"sounds.length\"\n                       :icon=\"'mdi-playlist-music'\"/>\n      </v-col>\n      <v-col cols=\"6\">\n        <DashBoardCard :title=\"'Number of Category'\" color=\"error\" :data=\"categories.length\"\n                       :icon=\"'mdi-folder-multiple'\"/>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"12\">\n\n        <v-simple-table class=\"elevation-4\">\n          <template v-slot:top>\n            <v-toolbar flat>\n              <v-toolbar-title>Number of Sounds per Category</v-toolbar-title>\n              <v-divider class=\"mx-4\" inset vertical/>\n              <v-spacer/>\n            </v-toolbar>\n          </template>\n          <template v-slot:default>\n            <thead>\n            <tr>\n              <th class=\"text-left\">Category Name</th>\n              <th class=\"text-left\">Number of Sounds</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-for=\"(group, category_id) in groups\" :key=\"category_id\">\n              <td>{{ getCategoryById(category_id).title }}</td>\n              <td>{{ group.length }}</td>\n            </tr>\n            </tbody>\n          </template>\n        </v-simple-table>\n      </v-col>\n      <!--\n      <div v-for=\"(group, category_id) in groups\" :key=\"category_id\">\n          <h2>{{ getCategoryById(category_id).title }}</h2>\n          <p>{{ group.length }}</p>\n      </div>\n      -->\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex';\nimport DashBoardCard from './cards.vue';\n\nfunction groupBy(array, key) {\n  const result = {}\n  array.forEach(item => {\n    if (!result[item[key]]) {\n      result[item[key]] = []\n    }\n    result[item[key]].push(item)\n  })\n  return result\n}\n\nexport default {\n  name: \"dashBoard\",\n  data() {\n    return {}\n  },\n  components: {\n    DashBoardCard\n  },\n  created() {\n    this.loadCategories;\n    this.sounds;\n  },\n  methods: {\n    getCategoryById: function (id) {\n      let category = this.categories.filter(c => c.id == id)[0];\n      if (category === undefined) {\n        console.log('undefined qarşim');\n        return {title: 'Unknown'};\n      }\n      return category;\n    }\n  },\n  computed: {\n    ...mapActions({\n      loadCategories: 'categories/loadCategories',\n      loadSounds: 'sounds/loadSounds'\n    }),\n    ...mapGetters({\n      categories: 'categories/getCategories',\n      sounds: 'sounds/getSounds'\n    }),\n    groups() {\n      return groupBy(this.sounds, 'category_id')\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}