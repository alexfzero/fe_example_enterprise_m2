{"ast":null,"code":"import FormErrorsMixin from \"@/mixins/FormErrorsMixin\";\nimport { makeGetRequest, makePostRequest, makeUpdateRequest } from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nimport DatePicker from \"@/modules/core/components/DatePicker.vue\";\nexport default {\n  name: \"UserEditForm\",\n  components: {\n    DatePicker,\n    ScrollCenterDialog\n  },\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    userData: Object\n  },\n  data() {\n    return {\n      URL_POS: selectors.API + selectors.TEMPS.POSITIONS,\n      URL_USR: models.API + roles.SUPER_ADMIN + models.CONTACTS.NAME + models.CONTACTS.PATH.USER,\n      loading: false,\n      is_admin: false,\n      is_staff: false,\n      is_booker: false,\n      user: {\n        birthday: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n        number: '8'\n      },\n      rules: [v => v.length <= 11 || 'Max 11 characters'],\n      sex: ['М', 'Ж'],\n      positions: undefined,\n      pos_field: undefined,\n      save_loading: false\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close', false);\n    },\n    save() {\n      let data = {\n        position: this.pos_field,\n        is_admin: this.is_admin,\n        is_staff: this.is_staff,\n        is_booker: this.is_booker\n      };\n      for (let key in this.user) {\n        data[key] = this.item[key];\n      }\n      let {\n        day,\n        month,\n        year\n      } = data.birthday.split('.');\n      data.birthday = '-'.join(year, month, day);\n      console.log('day, month, year', day, month, year);\n      console.log('data[key]', data);\n      if (this.edit) {\n        let id = this.userData.id;\n        data.position = data.position.value;\n        this.changeUser(data, id);\n      } else {\n        this.createUser(data);\n      }\n    },\n    getPositions() {\n      makeGetRequest(this.URL_POS).then(resp => resp.json()).then(data => {\n        this.positions = data;\n      });\n    },\n    createUser(data) {\n      makePostRequest(this.URL_POS, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.user);\n      }, 300);\n    },\n    changeUser(data, id) {\n      let url_id = id + '/';\n      makeUpdateRequest(this.URL_POS + url_id, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.user);\n      }, 300);\n    },\n    load_edit_item() {\n      if (this.userData) {\n        let {\n          last_name,\n          first_name,\n          middle_name\n        } = this.userData;\n        console.log(this.userData);\n        for (let key in this.userData) {\n          if (!this.edit && key === 'password') continue;\n          if ('last_name' === key) {\n            this.user[key] = last_name;\n            continue;\n          }\n          if ('first_name' === key) {\n            this.user[key] = first_name;\n            continue;\n          }\n          if ('middle_name' === key) {\n            this.user[key] = middle_name;\n            continue;\n          }\n          this.user[key] = this.userData[key];\n        }\n      }\n    }\n  },\n  created() {\n    this.getPositions();\n    this.load_edit_item();\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить должность' : 'Редактировать должность';\n    }\n  }\n};","map":{"version":3,"mappings":"AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACAd;QACAC;QACAC;MACA;MACA;QACAN;MACA;MACA;QAAAmB;QAAAC;QAAAC;MAAA;MACArB;MAEAsB;MACAA;MAEA;QACA;QACAtB;QACA;MACA;QACA;MACA;IACA;IACAuB;MACAC,6BACAC,0BACAA;QACA;MACA;IACA;IACAC;MACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAF;QACA;QACA;MACA;IACA;IACAG;MACA;QACA;UAAAC;UAAAC;UAAAC;QAAA;QACAZ;QACA;UACA;UACA;YAAA;YAAA;UAAA;UACA;YAAA;YAAA;UAAA;UACA;YAAA;YAAA;UAAA;UACA;QACA;MACA;IACA;EACA;EAEAa;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EAEA;AACA","names":["name","components","DatePicker","ScrollCenterDialog","mixins","props","opened","edit","userData","data","URL_POS","URL_USR","loading","is_admin","is_staff","is_booker","user","birthday","number","rules","sex","positions","pos_field","save_loading","methods","close","save","position","day","month","year","console","getPositions","makeGetRequest","then","createUser","makePostRequest","setTimeout","changeUser","makeUpdateRequest","load_edit_item","last_name","first_name","middle_name","created","computed","form_title"],"sourceRoot":"src/modules/admin/users","sources":["UserEditForm.vue"],"sourcesContent":["<template>\n  <scroll-center-dialog\n      v-model=\"\n      /* eslint-disable-next-line vue/no-mutating-props */\n      opened\"\n      :loading=\"save_loading\"\n      width=\"600\"\n      @close=\"close\"\n      @apply=\"save\"\n      :title=\"form_title\"\n      :scrolled=\"false\"\n  >\n    <v-text-field\n        v-model=\"user.first_name\"\n        label=\"Имя\"\n        :error=\"hasError('first_name')\"\n        :errorMessages=\"getError('first_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.last_name\"\n        label=\"Фамилия\"\n        :error=\"hasError('last_name')\"\n        :errorMessages=\"getError('last_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.mid_name\"\n        label=\"Отчество\"\n        :error=\"hasError('mid_name')\"\n        :errorMessages=\"getError('mid_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.username\"\n        label=\"Логин\"\n        :error=\"hasError('username')\"\n        :errorMessages=\"getError('username')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-if=\"!this.edit\"\n        v-model=\"user.password\"\n        label=\"Пароль\"\n        :error=\"hasError('password')\"\n        :errorMessages=\"getError('password')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-autocomplete\n        v-model=\"user.sex\"\n        :items=\"sex\"\n        label=\"Пол\"\n        :error=\"hasError('sex')\"\n        :errorMessages=\"getError('sex')\"\n    ></v-autocomplete>\n    <date-picker\n        key=\"birthday\"\n        v-model=\"user.birthday\"\n        label=\"День рождения\"\n        :description=\"'День рождения'\"\n    >\n    </date-picker>\n    <v-text-field\n        v-model=\"user.number\"\n        label=\"Телефон\"\n        :rules=\"rules\"\n        counter=\"11\"\n        :error=\"hasError('number')\"\n        :errorMessages=\"getError('number')\"\n        class=\"mb-n2 mt-4\"\n    ></v-text-field>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"pos_field\"\n        :items=\"positions\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Должность\"\n        :error=\"hasError('pos_field')\"\n        :errorMessages=\"getError('pos_field')\"\n    ></v-autocomplete>\n    <v-checkbox\n        v-model=\"is_admin\"\n        :label=\"`Админ: ${is_admin.toString()}`\"\n    ></v-checkbox>\n    <v-checkbox\n        v-model=\"is_staff\"\n        :label=\"`Сотрудник: ${is_staff.toString()}`\"\n    ></v-checkbox>\n    <v-checkbox\n        v-model=\"is_booker\"\n        :label=\"`Бухгалтер: ${is_booker.toString()}`\"\n    ></v-checkbox>\n  </scroll-center-dialog>\n</template>\n\n<script>\nimport FormErrorsMixin from \"@/mixins/FormErrorsMixin\"\nimport {makeGetRequest, makePostRequest, makeUpdateRequest} from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nimport DatePicker from \"@/modules/core/components/DatePicker.vue\";\n\nexport default {\n  name: \"UserEditForm\",\n  components: {DatePicker, ScrollCenterDialog},\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    userData: Object,\n  },\n  data() {\n    return {\n      URL_POS: selectors.API + selectors.TEMPS.POSITIONS,\n      URL_USR: models.API + roles.SUPER_ADMIN + models.CONTACTS.NAME + models.CONTACTS.PATH.USER,\n      loading: false,\n      is_admin: false,\n      is_staff: false,\n      is_booker: false,\n      user: {\n        birthday: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n        number: '8',\n      },\n      rules: [v => v.length <= 11 || 'Max 11 characters'],\n      sex: ['М', 'Ж'],\n      positions: undefined,\n      pos_field: undefined,\n      save_loading: false,\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close', false)\n    },\n    save() {\n      let data = {\n        position: this.pos_field,\n        is_admin: this.is_admin,\n        is_staff: this.is_staff,\n        is_booker: this.is_booker,\n      }\n      for (let key in this.user) {\n        data[key] = this.item[key]\n      }\n      let {day, month, year} = data.birthday.split('.')\n      data.birthday = '-'.join(year, month, day)\n\n      console.log('day, month, year', day, month, year)\n      console.log('data[key]', data)\n\n      if (this.edit) {\n        let id = this.userData.id\n        data.position = data.position.value\n        this.changeUser(data, id)\n      } else {\n        this.createUser(data)\n      }\n    },\n    getPositions() {\n      makeGetRequest(this.URL_POS)\n          .then(resp => resp.json())\n          .then(data => {\n            this.positions = data\n          })\n    },\n    createUser(data) {\n      makePostRequest(this.URL_POS, data)\n      setTimeout(()=>{\n        this.save_loading = false\n        this.$emit('close', this.user)\n      }, 300)\n    },\n    changeUser(data, id) {\n      let url_id = id + '/'\n      makeUpdateRequest(this.URL_POS + url_id, data)\n      setTimeout(()=>{\n        this.save_loading = false\n        this.$emit('close', this.user)\n      }, 300)\n    },\n    load_edit_item() {\n      if (this.userData) {\n        let {last_name, first_name, middle_name} = this.userData\n        console.log(this.userData)\n        for (let key in this.userData) {\n          if (!this.edit && key === 'password') continue\n          if ('last_name' === key) {this.user[key] = last_name; continue}\n          if ('first_name' === key) {this.user[key] = first_name; continue}\n          if ('middle_name' === key) {this.user[key] = middle_name; continue}\n          this.user[key] = this.userData[key]\n        }\n      }\n    },\n  },\n\n  created() {\n    this.getPositions()\n    this.load_edit_item()\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить должность' : 'Редактировать должность'\n    }\n    ,\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}