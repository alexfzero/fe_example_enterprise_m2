{"ast":null,"code":"import FormErrorsMixin from \"@/mixins/FormErrorsMixin\";\nimport { makeGetRequest, makePostRequest, makeUpdateRequest } from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nexport default {\n  name: \"OrgEditForm\",\n  components: {\n    ScrollCenterDialog\n  },\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    orgData: Object\n  },\n  data() {\n    return {\n      URL_USR: selectors.API + selectors.CONTACTS.USER,\n      URL_ORG: models.API + roles.SUPER_ADMIN + models.CONTACTS.NAME + models.CONTACTS.PATH.ORGANIZATIONS,\n      loading: false,\n      is_admin: false,\n      is_staff: false,\n      is_booker: false,\n      user: {\n        birthday: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, 10),\n        number: '8'\n      },\n      users: undefined,\n      user_field: undefined,\n      save_loading: false\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close', false);\n    },\n    save() {\n      let data = {\n        user: this.user_field\n      };\n      for (let key in this.user) {\n        data[key] = this.user[key];\n      }\n      if (this.edit) {\n        let id = this.orgData.id;\n        this.changeOrg(data, id);\n      } else {\n        this.createOrg(data);\n      }\n    },\n    getUsers() {\n      makeGetRequest(this.URL_USR).then(resp => resp.json()).then(data => {\n        this.users = data;\n      });\n    },\n    createOrg(data) {\n      makePostRequest(this.URL_ORG, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.user);\n      }, 800);\n    },\n    changeOrg(data, id) {\n      let url_id = id + '/';\n      makeUpdateRequest(this.URL_ORG + url_id, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.user);\n      }, 800);\n    },\n    load_edit_item() {\n      if (this.orgData) {\n        let {\n          birthday,\n          number,\n          sex,\n          username,\n          is_admin,\n          is_staff,\n          is_booker\n        } = this.orgData;\n        let [last_name, first_name, middle_name] = this.orgData.fio.split(' ');\n        this.user_field = this.orgData.position.value;\n        this.user.last_name = last_name;\n        this.user.first_name = first_name;\n        this.user.middle_name = middle_name;\n        this.user.birthday = birthday;\n        this.user.number = number;\n        if (sex in this.sex) this.user.sex = sex;else this.user.sex = this.sex[0];\n        this.user.username = username;\n        this.is_admin = is_admin;\n        this.is_staff = is_staff;\n        this.is_booker = is_booker;\n      }\n    }\n  },\n  created() {\n    this.getUsers();\n    this.load_edit_item();\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить организацию' : 'Редактировать организацию';\n    }\n  }\n};","map":{"version":3,"mappings":"AA+DA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAR;MACA;MAEA;QACAP;MACA;MAEA;QACA;QACA;MACA;QACA;MACA;IACA;IACAgB;MACAC,6BACAC,0BACAA;QACA;MACA;IACA;IACAC;MACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAF;QACA;QACA;MACA;IACA;IACAG;MACA;QACA;UAAAhB;UAAAC;UAAAgB;UAAAC;UAAAtB;UAAAC;UAAAC;QAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,8CACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EAEAqB;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EAEA;AACA","names":["name","components","ScrollCenterDialog","mixins","props","opened","edit","orgData","data","URL_USR","URL_ORG","loading","is_admin","is_staff","is_booker","user","birthday","number","users","user_field","save_loading","methods","close","save","getUsers","makeGetRequest","then","createOrg","makePostRequest","setTimeout","changeOrg","makeUpdateRequest","load_edit_item","sex","username","created","computed","form_title"],"sourceRoot":"src/modules/admin/organization","sources":["OrgEditForm.vue"],"sourcesContent":["<template>\n  <scroll-center-dialog\n      v-model=\"\n      /* eslint-disable-next-line vue/no-mutating-props */\n      opened\"\n      :loading=\"save_loading\"\n      width=\"600\"\n      @close=\"close\"\n      @apply=\"save\"\n      :title=\"form_title\"\n      :scrolled=\"false\"\n  >\n    <v-text-field\n        v-model=\"user.last_name\"\n        label=\"Фамилия\"\n        :error=\"hasError('last_name')\"\n        :errorMessages=\"getError('last_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.first_name\"\n        label=\"Имя\"\n        :error=\"hasError('first_name')\"\n        :errorMessages=\"getError('first_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.middle_name\"\n        label=\"Отчество\"\n        :error=\"hasError('mid_name')\"\n        :errorMessages=\"getError('mid_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.username\"\n        label=\"Логин\"\n        :error=\"hasError('username')\"\n        :errorMessages=\"getError('username')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"user.number\"\n        label=\"Телефон\"\n        :rules=\"rules\"\n        counter=\"11\"\n        :error=\"hasError('number')\"\n        :errorMessages=\"getError('number')\"\n        class=\"mb-n2 mt-4\"\n    ></v-text-field>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"user_field\"\n        :items=\"users\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Должность\"\n        :error=\"hasError('pos_field')\"\n        :errorMessages=\"getError('pos_field')\"\n    ></v-autocomplete>\n  </scroll-center-dialog>\n</template>\n\n<script>\nimport FormErrorsMixin from \"@/mixins/FormErrorsMixin\"\nimport {makeGetRequest, makePostRequest, makeUpdateRequest} from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\n\nexport default {\n  name: \"OrgEditForm\",\n  components: {ScrollCenterDialog},\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    orgData: Object,\n  },\n  data() {\n    return {\n      URL_USR: selectors.API + selectors.CONTACTS.USER,\n      URL_ORG: models.API + roles.SUPER_ADMIN + models.CONTACTS.NAME + models.CONTACTS.PATH.ORGANIZATIONS,\n      loading: false,\n      is_admin: false,\n      is_staff: false,\n      is_booker: false,\n      user: {\n        birthday: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().slice(0, 10),\n        number: '8',\n      },\n      users: undefined,\n      user_field: undefined,\n      save_loading: false,\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close', false)\n    },\n    save() {\n      let data = {\n        user: this.user_field,\n      }\n\n      for (let key in this.user) {\n        data[key] = this.user[key]\n      }\n\n      if (this.edit) {\n        let id = this.orgData.id\n        this.changeOrg(data, id)\n      } else {\n        this.createOrg(data)\n      }\n    },\n    getUsers() {\n      makeGetRequest(this.URL_USR)\n          .then(resp => resp.json())\n          .then(data => {\n            this.users = data\n          })\n    },\n    createOrg(data) {\n      makePostRequest(this.URL_ORG, data)\n      setTimeout(()=>{\n        this.save_loading = false\n        this.$emit('close', this.user)\n      }, 800)\n    },\n    changeOrg(data, id) {\n      let url_id = id + '/'\n      makeUpdateRequest(this.URL_ORG + url_id, data)\n      setTimeout(()=>{\n        this.save_loading = false\n        this.$emit('close', this.user)\n      }, 800)\n    },\n    load_edit_item() {\n      if (this.orgData) {\n        let {birthday, number, sex, username, is_admin, is_staff, is_booker} = this.orgData\n        let [last_name, first_name, middle_name] = this.orgData.fio.split(' ')\n        this.user_field = this.orgData.position.value\n        this.user.last_name = last_name\n        this.user.first_name = first_name\n        this.user.middle_name = middle_name\n        this.user.birthday = birthday\n        this.user.number = number\n        if (sex in this.sex) this.user.sex = sex\n        else this.user.sex = this.sex[0]\n        this.user.username = username\n        this.is_admin = is_admin\n        this.is_staff = is_staff\n        this.is_booker = is_booker\n      }\n    },\n  },\n\n  created() {\n    this.getUsers()\n    this.load_edit_item()\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить организацию' : 'Редактировать организацию'\n    }\n    ,\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}