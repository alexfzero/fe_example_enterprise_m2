{"ast":null,"code":"import FormErrorsMixin from \"@/mixins/FormErrorsMixin\";\nimport { makeGetRequest, makePostRequest, makeUpdateRequest } from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nexport default {\n  name: \"StorageEditForm\",\n  components: {\n    ScrollCenterDialog\n  },\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    productData: Object\n  },\n  data() {\n    return {\n      default_data: {\n        number: undefined,\n        name: undefined,\n        article: undefined,\n        quantity: undefined\n      },\n      URL: models.API + roles.SUPER_ADMIN + models.REFERENCES.NAME + models.REFERENCES.PATH.STORAGES,\n      loading: false,\n      number: undefined,\n      name: undefined,\n      article: undefined,\n      quantity: undefined,\n      save_loading: false\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close', false);\n    },\n    save() {\n      let data = {\n        product_number: this.number,\n        product_name: this.name,\n        product_article: this.article,\n        quantity: this.quantity\n      };\n      if (this.edit) {\n        let id = this.productData.id;\n        this.changePos(data, id);\n      } else {\n        this.createPos(data);\n      }\n    },\n    createPos(data) {\n      makePostRequest(this.URL, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.position);\n      }, 300);\n    },\n    changePos(data, id) {\n      let url_id = id + '/';\n      makeUpdateRequest(this.URL + url_id, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.position);\n      }, 300);\n    },\n    load_edit_item() {\n      if (this.productData) {\n        this.product_number = this.productData.number;\n        this.product_name = this.productData.name;\n        this.product_article = this.productData.article;\n        this.quantity = this.productData.quantity;\n      }\n    }\n  },\n  created() {\n    this.load_edit_item();\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить позицию' : 'Редактировать позицию';\n    }\n  }\n};","map":{"version":3,"mappings":"AA4CA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;QACAC;QACAV;QACAW;QACAC;MACA;MACAC;MACAC;MACAJ;MACAV;MACAW;MACAC;MACAG;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;QACAT;MACA;MAEA;QACA;QACA;MACA;QACA;MACA;IACA;IACAU;MACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAF;QACA;QACA;MACA;IACA;IACAG;MACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EAEAC;IACA;EACA;EACAC;IACAC;MACA;IACA;EAEA;AACA","names":["name","components","ScrollCenterDialog","mixins","props","opened","edit","productData","data","default_data","number","article","quantity","URL","loading","save_loading","methods","close","save","product_number","product_name","product_article","createPos","makePostRequest","setTimeout","changePos","makeUpdateRequest","load_edit_item","created","computed","form_title"],"sourceRoot":"src/modules/admin/storage","sources":["StorageEditForm.vue"],"sourcesContent":["<template>\n  <scroll-center-dialog\n      v-model=\"\n      /* eslint-disable-next-line vue/no-mutating-props */\n      opened\"\n      :loading=\"save_loading\"\n      width=\"500\"\n      @close=\"close\"\n      @apply=\"save\"\n      :title=\"form_title\"\n      :scrolled=\"false\"\n  >\n    <v-text-field\n        v-model=\"number\"\n        label=\"Номер\"\n        :error=\"hasError('number')\"\n        :errorMessages=\"getError('number')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"name\"\n        label=\"Наименование\"\n        :error=\"hasError('name')\"\n        :errorMessages=\"getError('name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"article\"\n        label=\"Артукул\"\n        :error=\"hasError('article')\"\n        :errorMessages=\"getError('article')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"quantity\"\n        label=\"Кол-во\"\n        :error=\"hasError('quantity')\"\n        :errorMessages=\"getError('quantity')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n  </scroll-center-dialog>\n</template>\n\n<script>\nimport FormErrorsMixin from \"@/mixins/FormErrorsMixin\"\nimport {makeGetRequest, makePostRequest, makeUpdateRequest} from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\n\nexport default {\n  name: \"StorageEditForm\",\n  components: {ScrollCenterDialog},\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    productData: Object,\n  },\n  data() {\n    return {\n      default_data: {\n        number: undefined,\n        name: undefined,\n        article: undefined,\n        quantity: undefined,\n      },\n      URL: models.API + roles.SUPER_ADMIN + models.REFERENCES.NAME + models.REFERENCES.PATH.STORAGES,\n      loading: false,\n      number: undefined,\n      name: undefined,\n      article: undefined,\n      quantity: undefined,\n      save_loading: false,\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close', false)\n    },\n    save() {\n      let data = {\n        product_number: this.number,\n        product_name: this.name,\n        product_article: this.article,\n        quantity: this.quantity,\n      }\n\n      if (this.edit) {\n        let id = this.productData.id\n        this.changePos(data, id)\n      } else {\n        this.createPos(data)\n      }\n    },\n    createPos(data) {\n      makePostRequest(this.URL, data)\n      setTimeout(() => {\n        this.save_loading = false\n        this.$emit('close', this.position)\n      }, 300)\n    },\n    changePos(data, id) {\n      let url_id = id + '/'\n      makeUpdateRequest(this.URL + url_id, data)\n      setTimeout(() => {\n        this.save_loading = false\n        this.$emit('close', this.position)\n      }, 300)\n    },\n    load_edit_item() {\n      if (this.productData) {\n        this.product_number = this.productData.number\n        this.product_name = this.productData.name\n        this.product_article = this.productData.article\n        this.quantity = this.productData.quantity\n      }\n    },\n  },\n\n  created() {\n    this.load_edit_item()\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить позицию' : 'Редактировать позицию'\n    }\n    ,\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}