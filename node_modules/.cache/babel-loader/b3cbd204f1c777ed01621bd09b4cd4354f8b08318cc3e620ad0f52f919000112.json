{"ast":null,"code":"export function getUserToken() {\n  return localStorage.getItem('user-tocken');\n}\nexport function getHttpHeaders() {\n  let headers = {\n    'Content-Type': 'application/json'\n  };\n  if (getUserToken()) headers['Authorization'] = 'Token ' + getUserToken();\n  // console.log(headers)\n  return headers;\n}\nexport function makeGetRequest(url) {\n  let headers = getHttpHeaders();\n  return fetch(url, {\n    headers: headers,\n    method: 'GET'\n  });\n}\nexport function makePostRequest(url, data, method, addheadres) {\n  let headers = getHttpHeaders();\n  if (!method) method = 'POST';\n  return fetch(url, {\n    headers: headers,\n    method: method,\n    body: JSON.stringify(data)\n  });\n}\nexport function makeUpdateRequest(url, data) {\n  let headers = getHttpHeaders();\n  return fetch(url, {\n    headers: headers,\n    method: 'PUT',\n    body: JSON.stringify(data)\n  });\n}\nexport function makeParticalUpdateRequest(url, data) {\n  return makePostRequest(url, data, \"PATCH\");\n}\nexport function makeDeleteRequest(url) {\n  let headers = getHttpHeaders();\n  return fetch(url, {\n    headers: headers,\n    method: 'DELETE'\n  });\n}","map":{"version":3,"names":["getUserToken","localStorage","getItem","getHttpHeaders","headers","makeGetRequest","url","fetch","method","makePostRequest","data","addheadres","body","JSON","stringify","makeUpdateRequest","makeParticalUpdateRequest","makeDeleteRequest"],"sources":["/home/alex/gitProjects/fe_be_mk_example_enterprise/fe_example_enterprise_m2/src/helper/index.js"],"sourcesContent":["export function getUserToken() {\n    return localStorage.getItem('user-tocken')\n}\n\nexport function getHttpHeaders() {\n    let headers = {\n        'Content-Type': 'application/json',\n    }\n    if (getUserToken())\n        headers['Authorization'] = 'Token ' + getUserToken()\n    // console.log(headers)\n    return headers\n}\n\nexport function makeGetRequest(url) {\n    let headers = getHttpHeaders();\n    return fetch(url, {\n        headers: headers,\n        method: 'GET'\n    })\n}\n\nexport function makePostRequest(url, data, method, addheadres) {\n    let headers = getHttpHeaders()\n    if (!method)\n        method = 'POST'\n    return fetch(url, {\n        headers: headers,\n        method: method,\n        body: JSON.stringify(data),\n    });\n}\n\nexport function makeUpdateRequest(url, data) {\n    let headers = getHttpHeaders()\n    return fetch(url, {\n        headers: headers,\n        method: 'PUT',\n        body: JSON.stringify(data),\n    });\n}\n\nexport function makeParticalUpdateRequest(url, data) {\n    return makePostRequest(url, data, \"PATCH\")\n}\n\nexport function makeDeleteRequest(url) {\n    let headers = getHttpHeaders()\n    return fetch(url, {\n        headers: headers,\n        method: 'DELETE',\n    });\n}"],"mappings":"AAAA,OAAO,SAASA,YAAY,GAAG;EAC3B,OAAOC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AAC9C;AAEA,OAAO,SAASC,cAAc,GAAG;EAC7B,IAAIC,OAAO,GAAG;IACV,cAAc,EAAE;EACpB,CAAC;EACD,IAAIJ,YAAY,EAAE,EACdI,OAAO,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGJ,YAAY,EAAE;EACxD;EACA,OAAOI,OAAO;AAClB;AAEA,OAAO,SAASC,cAAc,CAACC,GAAG,EAAE;EAChC,IAAIF,OAAO,GAAGD,cAAc,EAAE;EAC9B,OAAOI,KAAK,CAACD,GAAG,EAAE;IACdF,OAAO,EAAEA,OAAO;IAChBI,MAAM,EAAE;EACZ,CAAC,CAAC;AACN;AAEA,OAAO,SAASC,eAAe,CAACH,GAAG,EAAEI,IAAI,EAAEF,MAAM,EAAEG,UAAU,EAAE;EAC3D,IAAIP,OAAO,GAAGD,cAAc,EAAE;EAC9B,IAAI,CAACK,MAAM,EACPA,MAAM,GAAG,MAAM;EACnB,OAAOD,KAAK,CAACD,GAAG,EAAE;IACdF,OAAO,EAAEA,OAAO;IAChBI,MAAM,EAAEA,MAAM;IACdI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC7B,CAAC,CAAC;AACN;AAEA,OAAO,SAASK,iBAAiB,CAACT,GAAG,EAAEI,IAAI,EAAE;EACzC,IAAIN,OAAO,GAAGD,cAAc,EAAE;EAC9B,OAAOI,KAAK,CAACD,GAAG,EAAE;IACdF,OAAO,EAAEA,OAAO;IAChBI,MAAM,EAAE,KAAK;IACbI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC7B,CAAC,CAAC;AACN;AAEA,OAAO,SAASM,yBAAyB,CAACV,GAAG,EAAEI,IAAI,EAAE;EACjD,OAAOD,eAAe,CAACH,GAAG,EAAEI,IAAI,EAAE,OAAO,CAAC;AAC9C;AAEA,OAAO,SAASO,iBAAiB,CAACX,GAAG,EAAE;EACnC,IAAIF,OAAO,GAAGD,cAAc,EAAE;EAC9B,OAAOI,KAAK,CAACD,GAAG,EAAE;IACdF,OAAO,EAAEA,OAAO;IAChBI,MAAM,EAAE;EACZ,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}