{"ast":null,"code":"import FormErrorsMixin from \"@/mixins/FormErrorsMixin\";\nimport { makeGetRequest, makePostRequest, makeUpdateRequest } from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\nexport default {\n  name: \"OrderEditForm\",\n  components: {\n    ScrollCenterDialog\n  },\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    orderData: Object\n  },\n  data() {\n    return {\n      URL_USR: selectors.API + selectors.CONTACTS.USER,\n      URL_ORG: selectors.API + selectors.CONTACTS.ORGANIZATIONS,\n      URL_CTR: selectors.API + selectors.REFERENCES.CONTRACTS,\n      URL_ORD: models.API + roles.SUPER_ADMIN + models.ORDERS.NAME + models.ORDERS.PATH.ORDERS,\n      loading: false,\n      org: {\n        bank_name: undefined,\n        bank_number: undefined,\n        bic: undefined,\n        contact_person: undefined,\n        corres_number: undefined,\n        full_name: undefined,\n        id: undefined,\n        inn: undefined,\n        kpp: undefined,\n        legal_address: undefined,\n        mail_address: undefined,\n        short_name: undefined\n      },\n      users: undefined,\n      organizations: undefined,\n      contracts: undefined,\n      save_loading: false\n    };\n  },\n  methods: {\n    close() {\n      this.$emit('close', false);\n    },\n    save() {\n      let data = {};\n      for (let key in this.org) {\n        data[key] = this.org[key];\n      }\n      if (this.edit) {\n        let id = this.orderData.id;\n        this.changeOrder(data, id);\n      } else {\n        this.createOrder(data);\n      }\n    },\n    getUsers() {\n      makeGetRequest(this.URL_USR).then(resp => resp.json()).then(data => {\n        this.users = data;\n      });\n    },\n    getOrganizations() {\n      makeGetRequest(this.URL_USR).then(resp => resp.json()).then(data => {\n        this.users = data;\n      });\n    },\n    getContracts() {\n      makeGetRequest(this.URL_USR).then(resp => resp.json()).then(data => {\n        this.users = data;\n      });\n    },\n    createOrder(data) {\n      makePostRequest(this.URL_ORG, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.org);\n      }, 800);\n    },\n    changeOrder(data, id) {\n      let url_id = id + '/';\n      makeUpdateRequest(this.URL_ORG + url_id, data);\n      setTimeout(() => {\n        this.save_loading = false;\n        this.$emit('close', this.org);\n      }, 800);\n    },\n    load_edit_item() {\n      if (this.orderData) {\n        for (let key in this.orderData) {\n          if (key in this.org) {\n            this.org[key] = this.orderData[key];\n          }\n        }\n      }\n    }\n  },\n  created() {\n    this.getUsers();\n    this.getOrganizations();\n    this.getContracts();\n    this.load_edit_item();\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить организацию' : 'Редактировать организацию';\n    }\n  }\n};","map":{"version":3,"mappings":"AAmHA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAzB;MACA;MAEA;QACA;QACA;MACA;QACA;MACA;IACA;IACA0B;MACAC,6BACAC,0BACAA;QACA;MACA;IACA;IACAC;MACAF,6BACAC,0BACAA;QACA;MACA;IACA;IACAE;MACAH,6BACAC,0BACAA;QACA;MACA;IACA;IACAG;MACAC;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAF;QACA;QACA;MACA;IACA;IACAG;MACA;QACA;UACA;YACA;UACA;QACA;MACA;IACA;EACA;EAEAC;IACA;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;AACA","names":["name","components","ScrollCenterDialog","mixins","props","opened","edit","orderData","data","URL_USR","URL_ORG","URL_CTR","URL_ORD","loading","org","bank_name","bank_number","bic","contact_person","corres_number","full_name","id","inn","kpp","legal_address","mail_address","short_name","users","organizations","contracts","save_loading","methods","close","save","getUsers","makeGetRequest","then","getOrganizations","getContracts","createOrder","makePostRequest","setTimeout","changeOrder","makeUpdateRequest","load_edit_item","created","computed","form_title"],"sourceRoot":"src/modules/admin/order","sources":["OrderEditForm.vue"],"sourcesContent":["\n<template>\n  <scroll-center-dialog\n      v-model=\"\n      /* eslint-disable-next-line vue/no-mutating-props */\n      opened\"\n      :loading=\"save_loading\"\n      width=\"600\"\n      @close=\"close\"\n      @apply=\"save\"\n      :title=\"form_title\"\n      :scrolled=\"false\"\n  >\n    <v-text-field\n        v-model=\"org.order_number\"\n        label=\"Полное название\"\n        :error=\"hasError('order_number')\"\n        :errorMessages=\"getError('order_number')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"org.contact_person\"\n        :items=\"users\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Контактное лицо\"\n        :error=\"hasError('contact_person')\"\n        :errorMessages=\"getError('contact_person')\"\n    ></v-autocomplete>\n    <v-autocomplete\n        class=\"mt-4\"\n        v-model=\"org.contact_person\"\n        :items=\"users\"\n        item-value=\"value\"\n        item-text=\"text\"\n        label=\"Контактное лицо\"\n        :error=\"hasError('contact_person')\"\n        :errorMessages=\"getError('contact_person')\"\n    ></v-autocomplete>\n    <date-picker\n        key=\"birthday\"\n        v-model=\"user.birthday\"\n        label=\"День рождения\"\n        :description=\"'День рождения'\"\n    >\n    </date-picker>\n    <v-text-field\n        v-model=\"org.short_name\"\n        label=\"Короктое название\"\n        :error=\"hasError('short_name')\"\n        :errorMessages=\"getError('short_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.bank_number\"\n        label=\"Номер банка\"\n        :error=\"hasError('bank_number')\"\n        :errorMessages=\"getError('bank_number')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.bank_name\"\n        label=\"Название банка\"\n        :error=\"hasError('bank_name')\"\n        :errorMessages=\"getError('bank_name')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.corres_number\"\n        label=\"Корреспондентский счет\"\n        :error=\"hasError('corres_number')\"\n        :errorMessages=\"getError('corres_number')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.bic\"\n        label=\"БИК\"\n        :error=\"hasError('bic')\"\n        :errorMessages=\"getError('bic')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n\n    <v-text-field\n        v-model=\"org.legal_address\"\n        label=\"Юр. адрес\"\n        :error=\"hasError('legal_address')\"\n        :errorMessages=\"getError('legal_address')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.mail_address\"\n        label=\"Почтовый адрес\"\n        :error=\"hasError('mail_address')\"\n        :errorMessages=\"getError('mail_address')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.inn\"\n        label=\"ИНН\"\n        :error=\"hasError('inn')\"\n        :errorMessages=\"getError('inn')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n    <v-text-field\n        v-model=\"org.kpp\"\n        label=\"КПП\"\n        :error=\"hasError('kpp')\"\n        :errorMessages=\"getError('kpp')\"\n        class=\"mb-n2\"\n    ></v-text-field>\n  </scroll-center-dialog>\n</template>\n\n<script>\nimport FormErrorsMixin from \"@/mixins/FormErrorsMixin\"\nimport {makeGetRequest, makePostRequest, makeUpdateRequest} from \"@/helper\";\nimport models from \"@/urls/models\";\nimport roles from \"@/urls/roles\";\nimport selectors from \"@/urls/selectors\";\nimport ScrollCenterDialog from \"@/modules/templates/ScrollCenterDialog.vue\";\n\nexport default {\n  name: \"OrderEditForm\",\n  components: {ScrollCenterDialog},\n  mixins: [FormErrorsMixin],\n  props: {\n    opened: Boolean,\n    edit: Boolean,\n    orderData: Object,\n  },\n  data() {\n    return {\n      URL_USR: selectors.API + selectors.CONTACTS.USER,\n      URL_ORG: selectors.API + selectors.CONTACTS.ORGANIZATIONS,\n      URL_CTR: selectors.API + selectors.REFERENCES.CONTRACTS,\n      URL_ORD: models.API + roles.SUPER_ADMIN + models.ORDERS.NAME + models.ORDERS.PATH.ORDERS,\n      loading: false,\n      org: {\n        bank_name: undefined,\n        bank_number: undefined,\n        bic: undefined,\n        contact_person: undefined,\n        corres_number: undefined,\n        full_name: undefined,\n        id: undefined,\n        inn: undefined,\n        kpp: undefined,\n        legal_address:  undefined,\n        mail_address: undefined,\n        short_name: undefined,\n      },\n      users: undefined,\n      organizations: undefined,\n      contracts: undefined,\n      save_loading:false,\n    }\n  },\n  methods: {\n    close() {\n      this.$emit('close', false)\n    },\n    save() {\n      let data = {}\n      for (let key in this.org) {\n        data[key] = this.org[key]\n      }\n\n      if (this.edit) {\n        let id = this.orderData.id\n        this.changeOrder(data, id)\n      } else {\n        this.createOrder(data)\n      }\n    },\n    getUsers() {\n      makeGetRequest(this.URL_USR)\n          .then(resp => resp.json())\n          .then(data => {\n            this.users = data\n          })\n    },\n    getOrganizations() {\n      makeGetRequest(this.URL_USR)\n          .then(resp => resp.json())\n          .then(data => {\n            this.users = data\n          })\n    },\n    getContracts() {\n      makeGetRequest(this.URL_USR)\n          .then(resp => resp.json())\n          .then(data => {\n            this.users = data\n          })\n    },\n    createOrder(data) {\n      makePostRequest(this.URL_ORG, data)\n      setTimeout(() => {\n        this.save_loading = false\n        this.$emit('close', this.org)\n      }, 800)\n    },\n    changeOrder(data, id) {\n      let url_id = id + '/'\n      makeUpdateRequest(this.URL_ORG + url_id, data)\n      setTimeout(() => {\n        this.save_loading = false\n        this.$emit('close', this.org)\n      }, 800)\n    },\n    load_edit_item() {\n      if (this.orderData) {\n        for (let key in this.orderData) {\n          if (key in this.org) {\n            this.org[key] = this.orderData[key]\n          }\n        }\n      }\n    },\n  },\n\n  created() {\n    this.getUsers()\n    this.getOrganizations()\n    this.getContracts()\n    this.load_edit_item()\n  },\n  computed: {\n    form_title() {\n      return this.edit === false ? 'Добавить организацию' : 'Редактировать организацию'\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}